version: '3.7'

services:

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - pg-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: some-rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    command:
      [
        "bash",
        "-c",
        "chmod 400 /var/lib/rabbitmq/.erlang.cookie; rabbitmq-server"
      ]
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - pg-network

  notifications-service:
    build:
      context: ../../notifications
      dockerfile: ../notifications/Dockerfile
    container_name: notifications-service
    ports:
      - "3006:3006"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    environment:
      PORT: 3006
      MONGO_URI: mongodb://mongo:27017
      MONGO_DB_NAME: notifications
      MONGO_COLLECTION_NAME: notifications
      ALLOWED_ORIGIN: http://localhost:4200
      RABBITMQ_HOST: some-rabbit
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    volumes:
      - ./logs/accommodatio-notifications-service-logs:/app/logs
    networks:
      - pg-network
      - monitoring

  reviews-service:
    build:
      context: ../../reviews
      dockerfile: ../reviews/Dockerfile
    container_name: reviews-service
    ports:
      - "3005:3005"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    environment:
      PORT: 3005
      MONGO_URI: mongodb://mongo:27017
      MONGO_DB_NAME: reviews
      MONGO_COLLECTION_NAME: reviews
      ALLOWED_ORIGIN: http://localhost:4200
      RESERVATIONS_URL: http://availability-service:3004/reservations
      RABBITMQ_HOST: some-rabbit
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    volumes:
      - ./logs/accommodatio-reviews-service-logs:/app/logs
    networks:
      - pg-network
      - monitoring

  accommodation-service:
    build:
      context: ../../accommodations
      dockerfile: ../accommodations/Dockerfile
    container_name: accommodation-service
    ports:
      - "3003:3003"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    environment:
      PORT: 3003
      MONGO_URI: mongodb://mongo:27017
      MONGO_DB_NAME: accommodations
      MONGO_COLLECTION_NAME: accommodations
      ALLOWED_ORIGIN: http://localhost:4200
      RABBITMQ_HOST: some-rabbit
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    volumes:
      - ./logs/accommodatio-accommodation-service-logs:/app/logs
    networks:
      - pg-network
      - monitoring

  user-service:
    build:
      context: ../../users
      dockerfile: ../users/Dockerfile
    container_name: user-service
    ports:
      - "3002:3002"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    environment:
      PORT: 3002
      MONGO_URI: mongodb://mongo:27017
      MONGO_DB_NAME: users
      MONGO_COLLECTION_NAME: users
      ALLOWED_ORIGIN: http://localhost:4200
      RABBITMQ_HOST: host.docker.internal
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    volumes:
      - ./logs/accommodatio-user-service-logs:/app/logs
    networks:
      - pg-network
      - monitoring

  availability-service:
    build:
      context: ../../availabilities
      dockerfile: ../availabilities/Dockerfile
    container_name: availability-service
    ports:
      - "3004:3004"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    environment:
      PORT: 3004
      MONGO_URI: mongodb://mongo:27017
      MONGO_DB_NAME: availabilities
      MONGO_COLLECTION_NAME_ACCOMMODATION: accommodations
      MONGO_COLLECTION_NAME_RESERVATION: reservations
      MONGO_COLLECTION_NAME_AVAILABILITY: availabilities
      ALLOWED_ORIGIN: http://localhost:4200
      RABBITMQ_HOST: some-rabbit
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    volumes:
      - ./logs/accommodatio-availability-service-logs:/app/logs
    networks:
      - pg-network
      - monitoring

  api-gateway-service:
    build:
      context: ../../api-gateway
      dockerfile: ../api-gateway/Dockerfile
    container_name: api-gateway-service
    ports:
      - "4200:4200"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    environment:
      PORT: 4200
      USERS_URL: http://user-service:3002
      AUTH_URL: http://authentication-service:3001
      ACCOMMODATION_URL: http://accommodation-service:3003
      AVAILABILITIES_URL: http://availability-service:3004
      REVIEWS_URL: http://reviews-service:3005
      NOTIFICATIONS_URL: http://notification-service:3006
      ALLOWED_ORIGIN: http://localhost:3000
      RABBITMQ_HOST: some-rabbit
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    volumes:
      - ./logs/accommodatio-api-gateway-service-logs:/app/logs
    networks:
      - pg-network
      - monitoring

  authentication-service:
    build:
      context: ../../authentication
      dockerfile: ../authentication/Dockerfile
    container_name: authentication-service
    ports:
      - "3001:3001"
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_started
    environment:
      PORT: 3001
      MONGO_URI: mongodb://mongo:27017
      MONGO_DB_NAME: auth
      MONGO_COLLECTION_NAME: users
      SECRET_KEY: secretkey
      SALT_ROUNDS: 9
      ALLOWED_ORIGIN: http://localhost:3000,http://localhost:4200
      RABBITMQ_HOST: some-rabbit
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    volumes:
      - ./logs/accommodatio-authentication-service-logs:/app/logs
    networks:
      - pg-network
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3200:3000"
    networks:
      - monitoring

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9999:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - monitoring

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    networks:
      - monitoring
    
  promtail:
    image: grafana/promtail:latest
    volumes:
      - type: bind
        source: ${PWD}/promtail-config.yml
        target: /etc/promtail/config.yaml
      - ./logs:/logs
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - loki
    ports:
      - "9080:9080"
    networks:
      - monitoring

networks:
  pg-network:
  monitoring:

volumes:
  mongo-data:
